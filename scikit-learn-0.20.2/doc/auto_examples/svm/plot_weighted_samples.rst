.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_svm_plot_weighted_samples.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_svm_plot_weighted_samples.py:


=====================
SVM: 加权样本
=====================

绘制加权数据集的决策函数, 其中数据点的大小(就是图中圈圈的直径)与它的权重成正比。

样本加权重新标度C参数，这意味着分类器更注重把权重大的那些点分类正确。
这种影响往往是微妙的。为了强调这里的效果，我们特别加大了离群值的权重，从而使得决策边界的变形非常明显。




.. image:: /auto_examples/svm/images/sphx_glr_plot_weighted_samples_001.png
    :class: sphx-glr-single-img





.. code-block:: python

    print(__doc__)

    import numpy as np
    import matplotlib.pyplot as plt
    from sklearn import svm


    def plot_decision_function(classifier, sample_weight, axis, title):
        # plot the decision function
        xx, yy = np.meshgrid(np.linspace(-4, 5, 500), np.linspace(-4, 5, 500))

        Z = classifier.decision_function(np.c_[xx.ravel(), yy.ravel()])
        Z = Z.reshape(xx.shape)

        # plot the line, the points, and the nearest vectors to the plane
        axis.contourf(xx, yy, Z, alpha=0.75, cmap=plt.cm.bone)
        axis.scatter(X[:, 0], X[:, 1], c=y, s=100 * sample_weight, alpha=0.9,
                     cmap=plt.cm.bone, edgecolors='black')

        axis.axis('off')
        axis.set_title(title)


    # we create 20 points
    np.random.seed(0)
    X = np.r_[np.random.randn(10, 2) + [1, 1], np.random.randn(10, 2)]
    y = [1] * 10 + [-1] * 10
    sample_weight_last_ten = abs(np.random.randn(len(X)))
    sample_weight_constant = np.ones(len(X))
    # and bigger weights to some outliers
    sample_weight_last_ten[15:] *= 5
    sample_weight_last_ten[9] *= 15

    # for reference, first fit without sample weights

    # fit the model
    clf_weights = svm.SVC(gamma=1)
    clf_weights.fit(X, y, sample_weight=sample_weight_last_ten)

    clf_no_weights = svm.SVC(gamma=1)
    clf_no_weights.fit(X, y)

    fig, axes = plt.subplots(1, 2, figsize=(14, 6))
    plot_decision_function(clf_no_weights, sample_weight_constant, axes[0],
                           "Constant weights")
    plot_decision_function(clf_weights, sample_weight_last_ten, axes[1],
                           "Modified weights")

    plt.show()

**Total running time of the script:** ( 0 minutes  0.349 seconds)


.. _sphx_glr_download_auto_examples_svm_plot_weighted_samples.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_weighted_samples.py <plot_weighted_samples.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_weighted_samples.ipynb <plot_weighted_samples.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
