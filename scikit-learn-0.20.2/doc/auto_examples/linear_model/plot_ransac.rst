.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_linear_model_plot_ransac.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_linear_model_plot_ransac.py:


===========================================
使用 RANSAC 进行鲁棒线性模型估计
===========================================

在这个例子中，我们将看到如何使用RANSAC算法在错误数据(faulty data)上鲁棒地拟合线性模型。

翻译者：www.studyai.com/antares




.. image:: /auto_examples/linear_model/images/sphx_glr_plot_ransac_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (8, 1) (8,) (8,)
    Estimated coefficients (true, linear regression, RANSAC):
    82.1903908407869 [54.17236387] [82.08533159]




|


.. code-block:: python

    import numpy as np
    from matplotlib import pyplot as plt

    from sklearn import linear_model, datasets


    n_samples = 1000
    n_outliers = 50


    X, y, coef = datasets.make_regression(n_samples=n_samples, n_features=1,
                                          n_informative=1, noise=10,
                                          coef=True, random_state=0)

    # 添加 outliers 数据点
    np.random.seed(0)
    X[:n_outliers] = 3 + 0.5 * np.random.normal(size=(n_outliers, 1))
    y[:n_outliers] = -3 + 10 * np.random.normal(size=n_outliers)

    # 使用所有数据拟合线性模型
    lr = linear_model.LinearRegression()
    lr.fit(X, y)

    # 使用 RANSAC 算法鲁棒滴拟合线性模型
    ransac = linear_model.RANSACRegressor()
    ransac.fit(X, y)
    inlier_mask = ransac.inlier_mask_
    outlier_mask = np.logical_not(inlier_mask)

    # 使用估计得到的模型拟合数据
    line_X = np.arange(X.min(), X.max())[:, np.newaxis]
    line_y = lr.predict(line_X)
    line_y_ransac = ransac.predict(line_X)
    print(line_X.shape, line_y.shape, line_y_ransac.shape)

    # 比较估计出的 coefficients
    print("Estimated coefficients (true, linear regression, RANSAC):")
    print(coef, lr.coef_, ransac.estimator_.coef_)

    lw = 2
    plt.scatter(X[inlier_mask], y[inlier_mask], color='yellowgreen', marker='.',
                label='Inliers')
    plt.scatter(X[outlier_mask], y[outlier_mask], color='gold', marker='.',
                label='Outliers')
    plt.plot(line_X, line_y, color='navy', linewidth=lw, label='Linear regressor')
    plt.plot(line_X, line_y_ransac, color='cornflowerblue', linewidth=lw,
             label='RANSAC regressor')
    plt.legend(loc='lower right')
    plt.xlabel("Input")
    plt.ylabel("Response")
    plt.show()

**Total running time of the script:** ( 0 minutes  0.058 seconds)


.. _sphx_glr_download_auto_examples_linear_model_plot_ransac.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ransac.py <plot_ransac.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ransac.ipynb <plot_ransac.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
