version: 2

jobs:
  python3:
    docker:
      - image: circleci/python:3.6.1
    environment:
      - MINICONDA_PATH: ~/miniconda
      - CONDA_ENV_NAME: testenv
      - PYTHON_VERSION: 3
    steps:
      - checkout
      - run: ./build_tools/circle/checkout_merge_commit.sh
      - restore_cache:
          key: v1-datasets-{{ .Branch }}
      - run: ./build_tools/circle/build_doc.sh
      - save_cache:
          key: v1-datasets-{{ .Branch }}
          paths:
            - ~/scikit_learn_data
      - store_artifacts:
          path: doc/_build/html/stable
          destination: doc
      - store_artifacts:
          path: ~/log.txt
          destination: log.txt
      # Persists generated documentation so that it can be attached and deployed
      # in the 'deploy' step.
      - persist_to_workspace:
          root: doc/_build/html
          paths: .


  python2:
    docker:
      # We use the python 3 docker image for simplicity. Python is installed
      # through conda and the python version actually used is set via the
      # PYTHON_VERSION environment variable.
      - image: circleci/python:3.6.1
    environment:
      # Test examples run with minimal dependencies
      - MINICONDA_PATH: ~/miniconda
      - CONDA_ENV_NAME: testenv
      - PYTHON_VERSION: "2"
      - NUMPY_VERSION: "1.10"
      - SCIPY_VERSION: "0.16"
      - MATPLOTLIB_VERSION: "1.4"
      - SCIKIT_IMAGE_VERSION: "0.11"
      - PANDAS_VERSION: "0.17.1"
    steps:
      - checkout
      - run: ./build_tools/circle/checkout_merge_commit.sh
      - restore_cache:
          key: v1-datasets-{{ .Branch }}-python2
      - run: ./build_tools/circle/build_doc.sh
      - save_cache:
          key: v1-datasets-{{ .Branch }}-python2
          paths:
            - ~/scikit_learn_data
      - store_artifacts:
          path: doc/_build/html/stable
          destination: doc
      - store_artifacts:
          path: ~/log.txt
          destination: log.txt

  lint:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - run: ./build_tools/circle/checkout_merge_commit.sh
      - run:
          name: dependencies
          command: sudo pip install flake8
      - run:
          name: flake8
          command: ./build_tools/circle/flake8_diff.sh

  pypy3:
    docker:
      - image: pypy:3-6.0.0
    steps:
      - restore_cache:
          keys:
            - pypy3-ccache-{{ .Branch }}
            - pypy3-ccache
      - checkout
      - run: ./build_tools/circle/build_test_pypy.sh
      - save_cache:
          key: pypy3-ccache-{{ .Branch }}-{{ .BuildNum }}
          paths:
            - ~/.ccache
            - ~/.cache/pip

  deploy:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - run: ./build_tools/circle/checkout_merge_commit.sh
      # Attach documentation generated in the 'python3' step so that it can be
      # deployed.
      - attach_workspace:
          at: doc/_build/html
      - run: ls -ltrh doc/_build/html/stable
      - deploy:
          command: |
            if [[ "${CIRCLE_BRANCH}" =~ ^master$|^[0-9]+\.[0-9]+\.X$ ]]; then
              bash build_tools/circle/push_doc.sh doc/_build/html/stable
            fi

workflows:
  version: 2
  build-doc-and-deploy:
    jobs:
      - python3
      - python2
      - lint
      - pypy3:
          filters:
            branches:
              only:
                - 0.20.X
      - deploy:
          requires:
            - python3
  pypy:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - pypy3
